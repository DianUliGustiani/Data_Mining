# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jAQIuxKoaOYQPt7myNSQEMgd5SW7Zjv3
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from mlxtend.frequent_patterns import fpgrowth, association_rules
import plotly.express as px

# Fungsi untuk memuat data
@st.cache
def load_data():
    df = pd.read_csv('Assignment-1_Data.csv', sep=';', on_bad_lines='skip')
    df.dropna(inplace=True)
    transaction_data = df.groupby(['BillNo', 'Date'])['Itemname'].apply(lambda x: ', '.join(x)).reset_index()
    transaction_data.drop(columns=['BillNo', 'Date'], inplace=True)
    items_df = transaction_data['Itemname'].str.split(', ', expand=True)
    transaction_data = pd.concat([transaction_data, items_df], axis=1)
    transaction_data = transaction_data.drop('Itemname', axis=1)
    df_encoded = pd.get_dummies(transaction_data, prefix='', prefix_sep='').groupby(level=0, axis=1).max()
    return df_encoded

# Muat data
df_encoded = load_data()

# Algoritma FP-Growth
frequent_itemsets = fpgrowth(df_encoded, min_support=0.007, use_colnames=True)
rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)

# Konversi frozensets ke list untuk ditampilkan di Plotly
rules['antecedents'] = rules['antecedents'].apply(list)
rules['consequents'] = rules['consequents'].apply(list)

# Buat scatter plot interaktif dengan Plotly
fig = px.scatter(rules, x="support", y="confidence", size="lift",
                 color="lift", hover_name="consequents",
                 title='Market Basket Analysis - Support vs. Confidence',
                 labels={'support': 'Support', 'confidence': 'Confidence'})

fig.update_layout(
    xaxis_title='Support',
    yaxis_title='Confidence',
    coloraxis_colorbar_title='Lift',
    showlegend=True
)

# Streamlit UI
st.title('Market Basket Analysis using FP-Growth')
st.write("This application performs Market Basket Analysis using the FP-Growth algorithm on the given dataset.")

st.header("Association Rules")
st.write(rules.head())

st.header("Scatter Plot: Support vs. Confidence")
st.plotly_chart(fig)